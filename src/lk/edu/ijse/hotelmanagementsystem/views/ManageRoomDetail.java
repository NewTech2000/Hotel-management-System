/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.edu.ijse.hotelmanagementsystem.views;

import java.awt.Font;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.edu.ijse.hotelmanagementsystem.controller.ControllerFactory;
import lk.edu.ijse.hotelmanagementsystem.controller.custom.RoomController;
import lk.edu.ijse.hotelmanagementsystem.dto.RoomDTO;
import lk.edu.ijse.hotelmanagementsystem.idgenerator.IDGenerator;

/**
 *
 * @author USER
 */
public class ManageRoomDetail extends javax.swing.JFrame {

    private RoomController ctrlRoom;
    private DefaultTableModel dtmRoom;
    /**
     * Creates new form ViewCustomerDetail
     */
    public ManageRoomDetail() {
        initComponents();
        coman();
        idGenerater();
        setLocationRelativeTo(null);
        loadDataRoom();
    }
    
    public void coman(){
        ctrlRoom =(RoomController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.ROOM);
        dtmRoom = (DefaultTableModel) tblRoom.getModel();
        tblRoom.getTableHeader().setFont(this.getFont().deriveFont(Font.BOLD));
    }
    
    private void loadDataRoom() {

        dtmRoom.setRowCount(0);
        try {
            ArrayList<RoomDTO> allRoom = ctrlRoom.getAll();
            
            if (allRoom == null) {
                return;
            }
            for (RoomDTO room : allRoom) {
                
                Object[] rowData = {
                    room.getRid(),
                    room.getRoom_type(),
                    room.getRoom_floor(),
                    room.getBed_type(),
                    room.getRoom_decription(),
                    room.getRoom_number(),
                    room.getPrices()
                };
                dtmRoom.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(ManageRoomDetail.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoom = new javax.swing.JTable();
        lblStep8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtRID = new javax.swing.JTextField();
        txtRoomType = new javax.swing.JTextField();
        txtRoomFloor = new javax.swing.JTextField();
        txtBedType = new javax.swing.JTextField();
        txtRoomNumber = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtPrices = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        btnSearch = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblRoom.setBackground(new java.awt.Color(204, 204, 204));
        tblRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room ID", "Room Type", "Room Floor", "Bead Type", "Room Decription", "Room  Num.", "Prices"
            }
        ));
        tblRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRoomMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRoom);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 860, 280));

        lblStep8.setBackground(new java.awt.Color(0, 0, 51));
        lblStep8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblStep8.setForeground(new java.awt.Color(255, 255, 255));
        lblStep8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStep8.setText("Room Detail");
        lblStep8.setOpaque(true);
        getContentPane().add(lblStep8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 30));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 520, 110, 30));

        jLabel7.setBackground(new java.awt.Color(204, 204, 204));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Bed Type");
        jLabel7.setOpaque(true);
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 100, 30));

        jLabel4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Room Floor");
        jLabel4.setOpaque(true);
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 100, 30));

        jLabel8.setBackground(new java.awt.Color(204, 204, 204));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Room Type");
        jLabel8.setOpaque(true);
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 100, 30));

        jLabel3.setBackground(new java.awt.Color(204, 204, 204));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("RID");
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 100, 30));

        txtRID.setBackground(new java.awt.Color(240, 240, 240));
        getContentPane().add(txtRID, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 170, 30));

        txtRoomType.setBackground(new java.awt.Color(240, 240, 240));
        getContentPane().add(txtRoomType, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 260, 30));

        txtRoomFloor.setBackground(new java.awt.Color(240, 240, 240));
        getContentPane().add(txtRoomFloor, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 260, 30));

        txtBedType.setBackground(new java.awt.Color(240, 240, 240));
        getContentPane().add(txtBedType, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 260, 30));

        txtRoomNumber.setBackground(new java.awt.Color(240, 240, 240));
        getContentPane().add(txtRoomNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 50, 260, 30));

        jLabel6.setBackground(new java.awt.Color(204, 204, 204));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Room Number");
        jLabel6.setOpaque(true);
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, 130, 30));

        jLabel5.setBackground(new java.awt.Color(204, 204, 204));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Room Description");
        jLabel5.setOpaque(true);
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 90, 130, 30));

        jLabel10.setBackground(new java.awt.Color(204, 204, 204));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Prices");
        jLabel10.setOpaque(true);
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 170, 100, 30));

        txtPrices.setBackground(new java.awt.Color(240, 240, 240));
        getContentPane().add(txtPrices, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 170, 260, 30));

        txtDescription.setBackground(new java.awt.Color(240, 240, 240));
        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane2.setViewportView(txtDescription);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 90, 260, 70));

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 50, 80, 30));

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 520, 110, 30));

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 520, 110, 30));

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 520, 110, 30));

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 24, 890, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRoomMouseClicked
        tblClik();
    }//GEN-LAST:event_tblRoomMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        loadReception();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        searchRoom();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        updateRoom();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        deleteRoom();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        addRoom();
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageRoomDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageRoomDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageRoomDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageRoomDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageRoomDetail().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblStep8;
    private javax.swing.JTable tblRoom;
    private javax.swing.JTextField txtBedType;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtPrices;
    private javax.swing.JTextField txtRID;
    private javax.swing.JTextField txtRoomFloor;
    private javax.swing.JTextField txtRoomNumber;
    private javax.swing.JTextField txtRoomType;
    // End of variables declaration//GEN-END:variables

    private void loadReception() {
        new ReceptionMain().setVisible(true);
        this.dispose();
    }
    
    public void addRoom(){
        
        RoomDTO roomDTO = new RoomDTO(
                txtRID.getText(),
                txtRoomType.getText(),
                txtRoomFloor.getText(),
                txtBedType.getText(),
                txtDescription.getText(),
                txtRoomNumber.getText(),
                Double.parseDouble(txtPrices.getText()));
        try {
            
            boolean result = false;
                result = ctrlRoom.add(roomDTO);
        }catch (Exception ex) {
            Logger.getLogger(ManageRoomDetail.class.getName()).log(Level.SEVERE, null, ex);
        }
        loadDataRoom();
    }
    
    public void deleteRoom(){
        
        String customerId = dtmRoom.getValueAt(tblRoom.getSelectedRow(), 0).toString();
        try {
            boolean deleted = ctrlRoom.delete(customerId);
            
        } catch (Exception ex) {
            Logger.getLogger(ManageRoomDetail.class.getName()).log(Level.SEVERE, null, ex);
        }
        loadDataRoom();
    }
    
    public void updateRoom(){
        
        String rid=txtRID.getText();
	String roomType=txtRoomType.getText();
	String roomFloor=txtRoomFloor.getText();
        String bedType=txtBedType.getText();
        String description=txtDescription.getText();
        String roomNumber=txtRoomNumber.getText();
        Double prices=Double.parseDouble(txtPrices.getText());
        
        RoomDTO foodDetail = new RoomDTO(rid, roomType, roomFloor, bedType, description, roomNumber, prices);
        try {
            boolean isUpdated = ctrlRoom.update(foodDetail);
            if (isUpdated) {
                JOptionPane.showMessageDialog( this,"Update Sucess");
            } else {
                JOptionPane.showMessageDialog( this,"Update SucessFully");
            }
            
        } catch (Exception e) {
            Logger.getLogger(ManageRoomDetail.class.getName()).log(Level.SEVERE, null, e);
        }
        loadDataRoom();
    }
    
    public void searchRoom(){
        
        String rid = txtRID.getText();
        
        try{
            RoomDTO roomList = ctrlRoom.search(rid);
            if (roomList== null) {
                JOptionPane.showMessageDialog(this, "Room not found..");
            } else {
                txtRID.setText(roomList.getRid());
                txtRoomType.setText(roomList.getRoom_type());
                txtRoomFloor.setText(roomList.getRoom_floor());
                txtBedType.setText(roomList.getBed_type());
                txtDescription.setText(roomList.getRoom_decription());
                txtRoomNumber.setText(roomList.getRoom_number());
                txtPrices.setText(""+roomList.getPrices());
            }
        }catch(Exception e){
            Logger.getLogger(ManageRoomDetail.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void tblClik() {
        
        int selectedRow = tblRoom.getSelectedRow();
        String rid = tblRoom.getValueAt(selectedRow, 0).toString();
        String room_type =tblRoom.getValueAt(selectedRow,1).toString();
        String room_floor =tblRoom.getValueAt(selectedRow, 2).toString();
        String bed_type =tblRoom.getValueAt(selectedRow, 3).toString();
        String room_decription =tblRoom.getValueAt(selectedRow, 4).toString();
        String room_number =tblRoom.getValueAt(selectedRow, 5).toString();
        double prices = Double.parseDouble(tblRoom.getValueAt(selectedRow, 6).toString());
        
        txtRID.setText(rid);
        txtRoomType.setText(room_type);
        txtRoomFloor.setText(room_floor);
        txtBedType.setText(bed_type);
        txtDescription.setText(room_decription);
        txtRoomNumber.setText(room_number);
        txtPrices.setText(Double.toString(prices));
    
    }
    
    public void idGenerater(){
        try {
            String id= IDGenerator.getNewID("room","rid", "R0");
            txtRID.setText(id);
        } catch (SQLException ex) {
            Logger.getLogger(ReceptionMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReceptionMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
